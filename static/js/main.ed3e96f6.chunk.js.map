{"version":3,"sources":["theStuff/navbar/navbar.js","theStuff/navbar/printFunctions/knitChartBlackAndWhite.js","theStuff/toolbar/colorPicker.js","theStuff/toolbar/zoomPicker.js","theStuff/toolbar/sizePicker.js","theStuff/toolbar/toolbar.js","theStuff/canvas/canvas.js","App.js","reportWebVitals.js","theStuff/reducer/rootReducer.js","index.js"],"names":["Navbar","className","onClick","download","knitInfo","console","log","SQUARE_SIZE","COLOR_SQUARES","canvas","document","createElement","id","width","height","ctx","getContext","Shape","x","y","w","h","fill","this","color","beginPath","fillStyle","fillRect","font","textAlign","fillText","CANVAS_WIDTH","WHITESPACE_MARGIN_TOP","square","Object","values","grid","yPos","length","xPos","push","GRID_PADDING_LEFT","i","gridSquare","stroke","toDataURL","createKnitImg","props","info","React","Component","connect","state","row","ColorPicker","handleChangeComplete","colorArray","choice","hex","changeColor","forceUpdate","setState","onMouseLeave","changeChoice","style","backgroundColor","onChangeComplete","dispatch","type","ZoomPicker","size","changeSize","SizePicker","column","onChange","bind","onSubmit","search","changeGrid","parseInt","e","infoNum","target","value","name","preventDefault","updateGrid","gridInfo","Toolbar","useState","tool","setTool","renderTool","Canvas","gridLength","GRID","STYLE","box","margin","display","container","padding","view","gridDisplay","gridRow","j","key","changeColorSquare","smoothScrolling","contentStyle","gridSpot","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","0","1","2","3","4","5","6","rootReducer","newSize","action","newColor","newGrid","gridPlace","match","previousAmountColumn","numberAmountChange","substring","emptyColumn","newArrayRow","previousAmountRow","pop","store","createStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed3e96f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './navbar.sass';\r\n//import { jsPDF } from 'jspdf';\r\nimport { connect } from 'react-redux';\r\nimport createKnitImg from './printFunctions/knitChartBlackAndWhite';\r\nimport download from 'downloadjs';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"no-print\">\r\n                <nav className=\"nav-container\">\r\n                    <ul className=\"link-container\">\r\n                        <li className=\"links\" onClick={() => download(createKnitImg(this.props.info))}>Print</li>\r\n                    </ul>\r\n                    <h1>Owen Bean Double Sided Knitting Pattern Generator</h1>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        info: {\r\n            grid: state.info.grid.row,\r\n            color: state.info.color,\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","export default function createKnitImg(knitInfo) {\r\n    console.log(\"logged\");\r\n    const CANVAS_WIDTH = 612;\r\n    const CANVAS_HEIGHT = 792;\r\n    const SQUARE_SIZE = 12;\r\n    const WHITESPACE_MARGIN_TOP = 60;\r\n    const GRID_PADDING_TOP = 20;\r\n    const GRID_PADDING_LEFT = 32;\r\n    const SPACE_BETWEEN_GRID = 1;\r\n    const HEADER_TEXT = \"24px Arial\";\r\n    const TEXT_SIZE = \"11px Arial\";\r\n    const COLOR_SQUARES = [\"black\", \"white\"];\r\n\r\n    let canvas = document.createElement('canvas');\r\n    canvas.id = \"knitImage\";\r\n    canvas.width = CANVAS_WIDTH;\r\n    canvas.height = CANVAS_HEIGHT;\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    console.log(knitInfo.color[0]);\r\n    function Shape(x, y, w, h, fill){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n        this.fill = (fill === 1) ? COLOR_SQUARES[0] : COLOR_SQUARES[1];\r\n    }\r\n    \r\n    ctx.beginPath();\r\n    ctx.fillStyle = \"gray\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.fillStyle = \"white\";\r\n    ctx.fillRect(0, 0, canvas.width, WHITESPACE_MARGIN_TOP);\r\n\r\n    ctx.font = HEADER_TEXT;\r\n    ctx.fillStyle = \"black\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.fillText(\"Owen Bean Knit Pattern Generator\", CANVAS_WIDTH/2, WHITESPACE_MARGIN_TOP/2);\r\n\r\n    ctx.font = TEXT_SIZE;\r\n\r\n    var square = [];\r\n\r\n    console.log(Object.values(knitInfo.grid));\r\n    for(let yPos = 0; yPos < Object.values(knitInfo.grid).length; yPos++){\r\n        for(let xPos = 0; xPos < Object.values(knitInfo.grid)[yPos].length; xPos++){\r\n            if(yPos === 0){\r\n                ctx.fillText(xPos + 1, xPos * (SQUARE_SIZE + SPACE_BETWEEN_GRID) + GRID_PADDING_LEFT + SQUARE_SIZE/2, GRID_PADDING_TOP/1.5 + WHITESPACE_MARGIN_TOP);\r\n            }\r\n            square.push(new Shape((xPos * (SQUARE_SIZE + SPACE_BETWEEN_GRID)) + GRID_PADDING_LEFT, (yPos * (SQUARE_SIZE + SPACE_BETWEEN_GRID)) + WHITESPACE_MARGIN_TOP + GRID_PADDING_TOP, SQUARE_SIZE, SQUARE_SIZE, Object.values(knitInfo.grid)[yPos][xPos]));\r\n        }\r\n        ctx.fillText(yPos + 1, GRID_PADDING_LEFT/2, (yPos * (SQUARE_SIZE + SPACE_BETWEEN_GRID)) + WHITESPACE_MARGIN_TOP + SQUARE_SIZE + GRID_PADDING_TOP);\r\n    }\r\n\r\n    for (var i in square){\r\n        let gridSquare = square[i];\r\n        ctx.fillStyle = gridSquare.fill;\r\n        ctx.fillRect(gridSquare.x, gridSquare.y, gridSquare.w, gridSquare.h);\r\n        ctx.stroke();\r\n    }\r\n\r\n    let imgURL = canvas.toDataURL(\"image/png\");\r\n    return imgURL;\r\n}\r\n\r\n","import React from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { connect } from 'react-redux'\r\n\r\nclass ColorPicker extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            choice: 0,\r\n        };\r\n    }\r\n\r\n    handleChangeComplete = (color) => {\r\n        var colorArray = (this.state.choice === 1) ? [color.hex , this.props.info.color[1]]: (this.state.choice === 2) ? [this.props.info.color[0] , color.hex] : this.props.info.color;\r\n        this.props.changeColor(colorArray);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeChoice(choice) {\r\n        this.setState({ choice: choice});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div onMouseLeave={() => this.changeChoice(0)}>\r\n                <div className=\"color-chooser\">\r\n                    <div className=\"color-choices\" onClick={() => this.changeChoice(1)} style={{backgroundColor: (this.state.choice === 1) ? '#333': '#444'}}>\r\n                        <p>Color 1</p>\r\n                        <div className=\"color-circle\" style={{backgroundColor: this.props.info.color[0]}}></div>\r\n                    </div>\r\n                    <div className=\"color-choices\" onClick={() => this.changeChoice(2)} style={{backgroundColor: (this.state.choice === 2) ? '#333': '#444'}}>\r\n                        <p>Color 2</p>\r\n                        <div className=\"color-circle\" style={{backgroundColor: this.props.info.color[1]}}></div>\r\n                    </div>\r\n                </div>\r\n                {(this.state.choice > 0) ? \r\n                <div className=\"color-picker\">\r\n                    <CompactPicker \r\n                        onChangeComplete={this.handleChangeComplete}\r\n                    />\r\n                </div>    \r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        info: state.info\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeColor: (color) => { dispatch({type: 'CHANGE_COLOR', color: color}) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColorPicker)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ZoomPicker extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"zoom-picker\">\r\n                <p className=\"zoom-amount\">{this.props.size * 25 + '%'}</p>\r\n                <div className=\"zoom-change-container\">\r\n                    <p className=\"zoom-change\" onClick={() => this.props.changeSize('+')}>+</p>\r\n                    <p className=\"zoom-change\" onClick={() => this.props.changeSize('-')}>-</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        size: state.info.size,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeSize: (size) => { dispatch({type: 'CHANGE_SIZE', size: size})}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ZoomPicker)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst MAX_ROW = 54;\r\nconst MAX_COLUMN = 44;\r\n\r\nclass SizePicker extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            row: Object.values(this.props.grid).length,\r\n            column: Object.values(this.props.grid)[0].length\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    updateGrid(info){\r\n        if(info.search(\"row\") !== -1){\r\n            if(info.search(/[+]/g) !== -1 && this.state.row < MAX_ROW){\r\n                this.props.changeGrid(info);\r\n                this.setState({\r\n                    row: parseInt(this.state.row) + 1,\r\n                })\r\n            }\r\n            else if(info.search(/[-]/g) !== -1 && this.state.row > 0){\r\n                this.props.changeGrid(info);\r\n                this.setState({\r\n                    row: parseInt(this.state.row) - 1,\r\n                })\r\n            }\r\n        }\r\n        else if(info.search(\"column\") !== -1){\r\n            if(info.search(/[+]/g) !== -1 && this.state.column < MAX_COLUMN){\r\n                this.props.changeGrid(info);\r\n                this.setState({\r\n                    column: parseInt(this.state.column) + 1,\r\n                })\r\n            }\r\n            else if(info.search(/[-]/g) !== -1 && this.state.column > 0){\r\n                this.props.changeGrid(info);\r\n                this.setState({\r\n                    column: parseInt(this.state.column) - 1,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange(e){\r\n        let infoNum = e.target.value;\r\n        if(e.target.name === \"row\"){\r\n            if(infoNum > MAX_ROW){\r\n                infoNum = MAX_ROW;\r\n            }\r\n            else if (infoNum < 0){\r\n                infoNum = 0;\r\n            }\r\n            this.setState({\r\n                row: infoNum,\r\n            })\r\n            this.props.changeGrid(\"row\" + infoNum)\r\n        }\r\n        else if(e.target.name === \"column\"){\r\n            if(infoNum > MAX_COLUMN){\r\n                infoNum = MAX_COLUMN;\r\n            }\r\n            else if (infoNum < 0){\r\n                infoNum = 0;\r\n            }\r\n            this.setState({\r\n                column: infoNum,\r\n            })\r\n            this.props.changeGrid(\"column\" + infoNum)\r\n        }\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"size-picker\">\r\n                <div className=\"size-selector\">\r\n                    <p className=\"size-selector-text\">Row</p>\r\n                    <form className=\"size-changer\" onSubmit={this.onSubmit}>\r\n                        <button onClick={() => this.updateGrid(\"+row\")} className=\"size-changer-button\">+</button>\r\n                        <input type=\"number\" value={this.state.row} name=\"row\" onChange={this.onChange} className=\"size-changer-input\"></input>\r\n                        <button onClick={() => this.updateGrid(\"-row\")} className=\"size-changer-button\">-</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"size-selector\">\r\n                    <p className=\"size-selector-text\">Column</p>\r\n                    <form className=\"size-changer\" onSubmit={this.onSubmit}>\r\n                        <button onClick={() => this.updateGrid(\"+column\")} className=\"size-changer-button\">+</button>\r\n                        <input type=\"number\" value={this.state.column} name=\"column\" onChange={this.onChange} className=\"size-changer-input\"></input>\r\n                        <button onClick={() => this.updateGrid(\"-column\")} className=\"size-changer-button\">-</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        grid: state.info.grid.row\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeGrid: (gridInfo) => { dispatch({type: 'CHANGE_GRID', gridInfo: gridInfo})}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SizePicker)","import './toolbar.sass'\r\nimport React, { useState } from 'react'\r\nimport ColorPicker from './colorPicker'\r\nimport ZoomPicker from './zoomPicker'\r\nimport SizePicker from './sizePicker';\r\n\r\nexport default function Toolbar(){\r\n    const [tool, setTool] = useState(\"none\");\r\n\r\n    function renderTool(tool) {\r\n        switch(tool){\r\n            case \"color\":\r\n                return <ColorPicker />;\r\n            case \"zoom\":\r\n                return <ZoomPicker />;\r\n            case \"size\":\r\n                return <SizePicker />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div onMouseLeave={() => setTool(\"none\")} className=\"no-print\">\r\n            <div className=\"toolbar-container\">\r\n                <ol className=\"tools-container\">\r\n                    <li className=\"tools\" onClick={() => setTool(\"color\")}>\r\n                        Color\r\n                    </li>\r\n                    <li className=\"tools\" onClick={() => setTool(\"size\")}>\r\n                        Size\r\n                    </li>\r\n                    <li className=\"tools\" onClick={() => setTool(\"zoom\")}>\r\n                        Zoom\r\n                    </li>\r\n                </ol>\r\n            </div>\r\n            {renderTool(tool)}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ScrollArea from 'react-scrollbar';\r\nimport './canvas.sass';\r\n\r\nclass Canvas extends React.Component{\r\n\r\n    render(){\r\n        const GRID = this.props.grid.row;\r\n        let gridLength;\r\n        if(Object.values(GRID) !== 0){\r\n            gridLength = Object.values(GRID)[0].length;\r\n        }\r\n        else{\r\n            gridLength = 0;\r\n        }\r\n        console.log(gridLength);\r\n        var STYLE = {\r\n            box: {\r\n                margin: '1px',\r\n                width: this.props.size * 12 + \"px\",\r\n                height: this.props.size * 9 + \"px\",\r\n            },\r\n            row: {\r\n                display: 'flex',\r\n            },\r\n            container: {\r\n                padding: '32px',\r\n                display: 'block',\r\n                width: (this.props.size * (12) * gridLength) + \"px\",\r\n            },\r\n            view: {\r\n                width: (this.props.size * (12) * gridLength) + 64 + \"px\",\r\n            }\r\n        }\r\n\r\n        var gridDisplay = [];\r\n        for(let i = 0; i < Object.values(GRID).length; i++){\r\n            var gridRow = [];\r\n            for(let j = 0; j < Object.values(GRID)[i].length; j++){\r\n                gridRow.push(\r\n                    <div key={\"Column: \" + j} id={\"Row: \" + i + \" Column: \" + j} style={{...STYLE.box, backgroundColor: this.props.color[Object.values(GRID)[i][j]]}} onClick={(key) => this.props.changeColorSquare(key.target.id)}>\r\n                    </div>\r\n                )\r\n            }\r\n            gridDisplay.push(\r\n                <div key={\"Row: \" + i} style={STYLE.row}>\r\n                    {gridRow}\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className=\"canvas\">\r\n                <ScrollArea\r\n                    className=\"canvas-container\"\r\n                    smoothScrolling={true}\r\n                    contentStyle={STYLE.view}\r\n                >\r\n                    <div style={STYLE.container}>\r\n                        {gridDisplay}\r\n                    </div>\r\n                </ScrollArea>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        color: state.info.color,\r\n        size: state.info.size,\r\n        grid: state.info.grid\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeColorSquare: (gridSpot) => { dispatch({type: \"CHANGE_COLOR_SQUARE\", gridSpot: gridSpot})}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas)","import React from 'react';\nimport Navbar from './theStuff/navbar/navbar';\nimport Toolbar from './theStuff/toolbar/toolbar';\nimport Canvas from './theStuff/canvas/canvas';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Toolbar />\n      <Canvas />\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\r\n    info: {\r\n        color: [\"#ff0\", \"#000\"],\r\n        size: 4,\r\n        grid: {\r\n            row: {\r\n                0: [0,0,0,0,0,0],\r\n                1: [0,1,0,0,1,0],\r\n                2: [0,1,0,0,1,0],\r\n                3: [0,0,0,0,0,0],\r\n                4: [0,1,0,0,1,0],\r\n                5: [0,0,1,1,0,0],\r\n                6: [0,0,0,0,0,0],\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    if (action.type === \"CHANGE_COLOR\") {\r\n        let newColor = action.color;\r\n        return {\r\n            info: {\r\n                grid: state.info.grid,\r\n                size: state.info.size,\r\n                color: newColor\r\n            }\r\n        }\r\n    }\r\n    else if(action.type === \"CHANGE_SIZE\") {\r\n        let newSize;\r\n        if(action.size === '+'){\r\n            newSize = (state.info.size < 20) ? ++state.info.size : state.info.size;\r\n        }\r\n        else if(action.size === '-'){\r\n            newSize = (state.info.size > 1) ? --state.info.size : state.info.size;\r\n        }\r\n        else{\r\n            newSize = state.info.size\r\n        }\r\n        return{\r\n            info: {\r\n                grid: state.info.grid,\r\n                size: newSize,\r\n                color: state.info.color\r\n            }\r\n        }\r\n    }\r\n    else if(action.type === \"CHANGE_COLOR_SQUARE\"){\r\n        let newGrid = state.info.grid.row;\r\n        let gridPlace = action.gridSpot.match(/[0-9]*/g);\r\n        newGrid[gridPlace[5]][gridPlace[15]] = (newGrid[gridPlace[5]][gridPlace[15]] === 0) ? 1 : 0;\r\n        return{\r\n            info: {\r\n                grid: {\r\n                    row: newGrid\r\n                },\r\n                size: state.info.size,\r\n                color: state.info.color\r\n            }\r\n        }\r\n    }\r\n    else if(action.type === \"CHANGE_GRID\"){\r\n        let newGrid = state.info.grid.row;\r\n        if(action.gridInfo.search(\"row\") !== -1){\r\n            if(action.gridInfo.search(/[0-9]/g) !== -1){\r\n                let previousAmountColumn = newGrid[0].length\r\n                let numberAmountChange = action.gridInfo.substring(action.gridInfo.search(/[0-9]/g), action.gridInfo.length);\r\n                newGrid = {\r\n\r\n                }\r\n                for(let i = 0; i < numberAmountChange; i++){\r\n                    let emptyColumn = [];\r\n                    for(let i = 0; i < previousAmountColumn; i++){\r\n                        emptyColumn.push(0);\r\n                    }\r\n                    newGrid[i] = emptyColumn;\r\n                }\r\n            }\r\n            else if(action.gridInfo.search(/[+]/g) !== -1){\r\n                var newArrayRow = [];\r\n                for(let i = 0; i < Object.values(newGrid)[0].length; i++){\r\n                    newArrayRow.push(0);\r\n                }\r\n                newGrid[Object.values(newGrid).length] = newArrayRow;\r\n            }\r\n            else if(action.gridInfo.search(/[-]/g) !== -1){\r\n                delete newGrid[Object.values(newGrid).length - 1];\r\n            }\r\n        }\r\n        else if(action.gridInfo.search(\"column\") !== -1){\r\n            if(action.gridInfo.search(/[0-9]/g) !== -1){\r\n                console.log(\"numer column\")\r\n                let previousAmountRow = Object.values(newGrid).length;\r\n                let numberAmountChange = action.gridInfo.substring(action.gridInfo.search(/[0-9]/g), action.gridInfo.length);\r\n                newGrid = {\r\n                    \r\n                }\r\n                for(let i = 0; i < previousAmountRow; i++){\r\n                    newGrid[i] = [];\r\n                    for(let j = 0; j < numberAmountChange; j++){\r\n                        newGrid[i].push(0);\r\n                    }\r\n                }\r\n            }\r\n            else if(action.gridInfo.search(/[+]/g) !== -1){\r\n                console.log(newGrid);\r\n                console.log(\"add column\")\r\n                for(let i = 0; i < Object.values(newGrid).length; i++){\r\n                    newGrid[i].push(0);\r\n                }\r\n                console.log(newGrid[Object.values(newGrid)[0]]);\r\n            }\r\n            else if(action.gridInfo.search(/[-]/g) !== -1){\r\n                for(let i = 0; i < Object.values(newGrid).length; i++){\r\n                    newGrid[i].pop();\r\n                }\r\n            }\r\n        }\r\n        console.log(newGrid);\r\n        return{\r\n            info: {\r\n                grid: {\r\n                    row: newGrid\r\n                },\r\n                size: state.info.size,\r\n                color: state.info.color\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './theStuff/reducer/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}